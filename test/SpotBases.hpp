#pragma once
#include "Movements.hpp"

typedef std::shared_ptr<Movements>                        MovementsType;
typedef std::vector<std::shared_ptr<std::pair<int,int>>>  ExpectedMovements;


typedef const std::string                                 SpotName;
typedef std::shared_ptr<Figure>                           Hero;
typedef std::shared_ptr<Figure>                           Enemy;
typedef const std::vector<std::shared_ptr<Figure>>        BoardSpot;
typedef std::tuple<Hero, BoardSpot>                       Spot;

Enemy enemy_a8{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(0, 0))};
Enemy enemy_a7{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(0, 1))};
Enemy enemy_a6{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(0, 2))};
Enemy enemy_a5{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(0, 3))};
Enemy enemy_a4{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(0, 4))};
Enemy enemy_a3{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(0, 5))};
Enemy enemy_a2{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(0, 6))};
Enemy enemy_a1{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(0, 7))};
Enemy enemy_b8{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(1, 0))};
Enemy enemy_b7{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(1, 1))};
Enemy enemy_b6{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(1, 2))};
Enemy enemy_b5{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(1, 3))};
Enemy enemy_b4{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(1, 4))};
Enemy enemy_b3{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(1, 5))};
Enemy enemy_b2{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(1, 6))};
Enemy enemy_b1{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(1, 7))};
Enemy enemy_c8{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(2, 0))};
Enemy enemy_c7{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(2, 1))};
Enemy enemy_c6{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(2, 2))};
Enemy enemy_c5{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(2, 3))};
Enemy enemy_c4{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(2, 4))};
Enemy enemy_c3{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(2, 5))};
Enemy enemy_c2{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(2, 6))};
Enemy enemy_c1{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(2, 7))};
Enemy enemy_d8{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(3, 0))};
Enemy enemy_d7{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(3, 1))};
Enemy enemy_d6{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(3, 2))};
Enemy enemy_d5{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(3, 3))};
Enemy enemy_d4{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(3, 4))};
Enemy enemy_d3{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(3, 5))};
Enemy enemy_d2{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(3, 6))};
Enemy enemy_d1{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(3, 7))};
Enemy enemy_e8{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(4, 0))};
Enemy enemy_e7{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(4, 1))};
Enemy enemy_e6{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(4, 2))};
Enemy enemy_e5{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(4, 3))};
Enemy enemy_e4{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(4, 4))};
Enemy enemy_e3{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(4, 5))};
Enemy enemy_e2{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(4, 6))};
Enemy enemy_e1{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(4, 7))};
Enemy enemy_f8{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(5, 0))};
Enemy enemy_f7{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(5, 1))};
Enemy enemy_f6{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(5, 2))};
Enemy enemy_f5{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(5, 3))};
Enemy enemy_f4{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(5, 4))};
Enemy enemy_f3{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(5, 5))};
Enemy enemy_f2{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(5, 6))};
Enemy enemy_f1{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(5, 7))};
Enemy enemy_g8{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(6, 0))};
Enemy enemy_g7{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(6, 1))};
Enemy enemy_g6{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(6, 2))};
Enemy enemy_g5{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(6, 3))};
Enemy enemy_g4{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(6, 4))};
Enemy enemy_g3{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(6, 5))};
Enemy enemy_g2{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(6, 6))};
Enemy enemy_g1{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(6, 7))};
Enemy enemy_h8{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(7, 0))};
Enemy enemy_h7{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(7, 1))};
Enemy enemy_h6{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(7, 2))};
Enemy enemy_h5{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(7, 3))};
Enemy enemy_h4{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(7, 4))};
Enemy enemy_h3{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(7, 5))};
Enemy enemy_h2{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(7, 6))};
Enemy enemy_h1{std::make_shared<Pawn>(Figure::BLACK, std::make_shared<std::pair<int, int>>(7, 7))};

Hero hero_a8{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(0, 0))};
Hero hero_a7{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(0, 1))};
Hero hero_a6{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(0, 2))};
Hero hero_a5{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(0, 3))};
Hero hero_a4{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(0, 4))};
Hero hero_a3{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(0, 5))};
Hero hero_a2{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(0, 6))};
Hero hero_a1{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(0, 7))};
Hero hero_b8{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(1, 0))};
Hero hero_b7{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(1, 1))};
Hero hero_b6{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(1, 2))};
Hero hero_b5{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(1, 3))};
Hero hero_b4{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(1, 4))};
Hero hero_b3{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(1, 5))};
Hero hero_b2{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(1, 6))};
Hero hero_b1{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(1, 7))};
Hero hero_c8{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(2, 0))};
Hero hero_c7{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(2, 1))};
Hero hero_c6{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(2, 2))};
Hero hero_c5{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(2, 3))};
Hero hero_c4{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(2, 4))};
Hero hero_c3{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(2, 5))};
Hero hero_c2{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(2, 6))};
Hero hero_c1{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(2, 7))};
Hero hero_d8{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(3, 0))};
Hero hero_d7{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(3, 1))};
Hero hero_d6{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(3, 2))};
Hero hero_d5{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(3, 3))};
Hero hero_d4{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(3, 4))};
Hero hero_d3{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(3, 5))};
Hero hero_d2{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(3, 6))};
Hero hero_d1{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(3, 7))};
Hero hero_e8{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(4, 0))};
Hero hero_e7{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(4, 1))};
Hero hero_e6{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(4, 2))};
Hero hero_e5{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(4, 3))};
Hero hero_e4{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(4, 4))};
Hero hero_e3{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(4, 5))};
Hero hero_e2{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(4, 6))};
Hero hero_e1{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(4, 7))};
Hero hero_f8{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(5, 0))};
Hero hero_f7{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(5, 1))};
Hero hero_f6{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(5, 2))};
Hero hero_f5{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(5, 3))};
Hero hero_f4{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(5, 4))};
Hero hero_f3{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(5, 5))};
Hero hero_f2{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(5, 6))};
Hero hero_f1{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(5, 7))};
Hero hero_g8{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(6, 0))};
Hero hero_g7{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(6, 1))};
Hero hero_g6{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(6, 2))};
Hero hero_g5{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(6, 3))};
Hero hero_g4{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(6, 4))};
Hero hero_g3{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(6, 5))};
Hero hero_g2{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(6, 6))};
Hero hero_g1{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(6, 7))};
Hero hero_h8{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(7, 0))};
Hero hero_h7{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(7, 1))};
Hero hero_h6{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(7, 2))};
Hero hero_h5{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(7, 3))};
Hero hero_h4{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(7, 4))};
Hero hero_h3{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(7, 5))};
Hero hero_h2{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(7, 6))};
Hero hero_h1{std::make_shared<Pawn>(Figure::WHITE, std::make_shared<std::pair<int, int>>(7, 7))};

std::shared_ptr<std::pair<int,int>> expectedPosition_a8 = std::make_shared<std::pair<int, int>>(0, 0);
std::shared_ptr<std::pair<int,int>> expectedPosition_a7 = std::make_shared<std::pair<int, int>>(0, 1);
std::shared_ptr<std::pair<int,int>> expectedPosition_a6 = std::make_shared<std::pair<int, int>>(0, 2);
std::shared_ptr<std::pair<int,int>> expectedPosition_a5 = std::make_shared<std::pair<int, int>>(0, 3);
std::shared_ptr<std::pair<int,int>> expectedPosition_a4 = std::make_shared<std::pair<int, int>>(0, 4);
std::shared_ptr<std::pair<int,int>> expectedPosition_a3 = std::make_shared<std::pair<int, int>>(0, 5);
std::shared_ptr<std::pair<int,int>> expectedPosition_a2 = std::make_shared<std::pair<int, int>>(0, 6);
std::shared_ptr<std::pair<int,int>> expectedPosition_a1 = std::make_shared<std::pair<int, int>>(0, 7);
std::shared_ptr<std::pair<int,int>> expectedPosition_b8 = std::make_shared<std::pair<int, int>>(1, 0);
std::shared_ptr<std::pair<int,int>> expectedPosition_b7 = std::make_shared<std::pair<int, int>>(1, 1);
std::shared_ptr<std::pair<int,int>> expectedPosition_b6 = std::make_shared<std::pair<int, int>>(1, 2);
std::shared_ptr<std::pair<int,int>> expectedPosition_b5 = std::make_shared<std::pair<int, int>>(1, 3);
std::shared_ptr<std::pair<int,int>> expectedPosition_b4 = std::make_shared<std::pair<int, int>>(1, 4);
std::shared_ptr<std::pair<int,int>> expectedPosition_b3 = std::make_shared<std::pair<int, int>>(1, 5);
std::shared_ptr<std::pair<int,int>> expectedPosition_b2 = std::make_shared<std::pair<int, int>>(1, 6);
std::shared_ptr<std::pair<int,int>> expectedPosition_b1 = std::make_shared<std::pair<int, int>>(1, 7);
std::shared_ptr<std::pair<int,int>> expectedPosition_c8 = std::make_shared<std::pair<int, int>>(2, 0);
std::shared_ptr<std::pair<int,int>> expectedPosition_c7 = std::make_shared<std::pair<int, int>>(2, 1);
std::shared_ptr<std::pair<int,int>> expectedPosition_c6 = std::make_shared<std::pair<int, int>>(2, 2);
std::shared_ptr<std::pair<int,int>> expectedPosition_c5 = std::make_shared<std::pair<int, int>>(2, 3);
std::shared_ptr<std::pair<int,int>> expectedPosition_c4 = std::make_shared<std::pair<int, int>>(2, 4);
std::shared_ptr<std::pair<int,int>> expectedPosition_c3 = std::make_shared<std::pair<int, int>>(2, 5);
std::shared_ptr<std::pair<int,int>> expectedPosition_c2 = std::make_shared<std::pair<int, int>>(2, 6);
std::shared_ptr<std::pair<int,int>> expectedPosition_c1 = std::make_shared<std::pair<int, int>>(2, 7);
std::shared_ptr<std::pair<int,int>> expectedPosition_d8 = std::make_shared<std::pair<int, int>>(3, 0);
std::shared_ptr<std::pair<int,int>> expectedPosition_d7 = std::make_shared<std::pair<int, int>>(3, 1);
std::shared_ptr<std::pair<int,int>> expectedPosition_d6 = std::make_shared<std::pair<int, int>>(3, 2);
std::shared_ptr<std::pair<int,int>> expectedPosition_d5 = std::make_shared<std::pair<int, int>>(3, 3);
std::shared_ptr<std::pair<int,int>> expectedPosition_d4 = std::make_shared<std::pair<int, int>>(3, 4);
std::shared_ptr<std::pair<int,int>> expectedPosition_d3 = std::make_shared<std::pair<int, int>>(3, 5);
std::shared_ptr<std::pair<int,int>> expectedPosition_d2 = std::make_shared<std::pair<int, int>>(3, 6);
std::shared_ptr<std::pair<int,int>> expectedPosition_d1 = std::make_shared<std::pair<int, int>>(3, 7);
std::shared_ptr<std::pair<int,int>> expectedPosition_e8 = std::make_shared<std::pair<int, int>>(4, 0);
std::shared_ptr<std::pair<int,int>> expectedPosition_e7 = std::make_shared<std::pair<int, int>>(4, 1);
std::shared_ptr<std::pair<int,int>> expectedPosition_e6 = std::make_shared<std::pair<int, int>>(4, 2);
std::shared_ptr<std::pair<int,int>> expectedPosition_e5 = std::make_shared<std::pair<int, int>>(4, 3);
std::shared_ptr<std::pair<int,int>> expectedPosition_e4 = std::make_shared<std::pair<int, int>>(4, 4);
std::shared_ptr<std::pair<int,int>> expectedPosition_e3 = std::make_shared<std::pair<int, int>>(4, 5);
std::shared_ptr<std::pair<int,int>> expectedPosition_e2 = std::make_shared<std::pair<int, int>>(4, 6);
std::shared_ptr<std::pair<int,int>> expectedPosition_e1 = std::make_shared<std::pair<int, int>>(4, 7);
std::shared_ptr<std::pair<int,int>> expectedPosition_f8 = std::make_shared<std::pair<int, int>>(5, 0);
std::shared_ptr<std::pair<int,int>> expectedPosition_f7 = std::make_shared<std::pair<int, int>>(5, 1);
std::shared_ptr<std::pair<int,int>> expectedPosition_f6 = std::make_shared<std::pair<int, int>>(5, 2);
std::shared_ptr<std::pair<int,int>> expectedPosition_f5 = std::make_shared<std::pair<int, int>>(5, 3);
std::shared_ptr<std::pair<int,int>> expectedPosition_f4 = std::make_shared<std::pair<int, int>>(5, 4);
std::shared_ptr<std::pair<int,int>> expectedPosition_f3 = std::make_shared<std::pair<int, int>>(5, 5);
std::shared_ptr<std::pair<int,int>> expectedPosition_f2 = std::make_shared<std::pair<int, int>>(5, 6);
std::shared_ptr<std::pair<int,int>> expectedPosition_f1 = std::make_shared<std::pair<int, int>>(5, 7);
std::shared_ptr<std::pair<int,int>> expectedPosition_g8 = std::make_shared<std::pair<int, int>>(6, 0);
std::shared_ptr<std::pair<int,int>> expectedPosition_g7 = std::make_shared<std::pair<int, int>>(6, 1);
std::shared_ptr<std::pair<int,int>> expectedPosition_g6 = std::make_shared<std::pair<int, int>>(6, 2);
std::shared_ptr<std::pair<int,int>> expectedPosition_g5 = std::make_shared<std::pair<int, int>>(6, 3);
std::shared_ptr<std::pair<int,int>> expectedPosition_g4 = std::make_shared<std::pair<int, int>>(6, 4);
std::shared_ptr<std::pair<int,int>> expectedPosition_g3 = std::make_shared<std::pair<int, int>>(6, 5);
std::shared_ptr<std::pair<int,int>> expectedPosition_g2 = std::make_shared<std::pair<int, int>>(6, 6);
std::shared_ptr<std::pair<int,int>> expectedPosition_g1 = std::make_shared<std::pair<int, int>>(6, 7);
std::shared_ptr<std::pair<int,int>> expectedPosition_h8 = std::make_shared<std::pair<int, int>>(7, 0);
std::shared_ptr<std::pair<int,int>> expectedPosition_h7 = std::make_shared<std::pair<int, int>>(7, 1);
std::shared_ptr<std::pair<int,int>> expectedPosition_h6 = std::make_shared<std::pair<int, int>>(7, 2);
std::shared_ptr<std::pair<int,int>> expectedPosition_h5 = std::make_shared<std::pair<int, int>>(7, 3);
std::shared_ptr<std::pair<int,int>> expectedPosition_h4 = std::make_shared<std::pair<int, int>>(7, 4);
std::shared_ptr<std::pair<int,int>> expectedPosition_h3 = std::make_shared<std::pair<int, int>>(7, 5);
std::shared_ptr<std::pair<int,int>> expectedPosition_h2 = std::make_shared<std::pair<int, int>>(7, 6);
std::shared_ptr<std::pair<int,int>> expectedPosition_h1 = std::make_shared<std::pair<int, int>>(7, 7);
